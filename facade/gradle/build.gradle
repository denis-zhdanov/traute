apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'

gradlePlugin {
    plugins {
        traute {
            id = 'tech.harmonysoft.oss.traute'
            implementationClass = 'tech.harmonysoft.oss.traute.gradle.TrauteGradlePlugin'
        }
    }
}

task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text =
                sourceSets.main.runtimeClasspath.join('\n') + '\n' + sourceSets.main.compileClasspath.join('\n')
    }
}

dependencies {
    compileOnly project(':core:common')
    compile project(':core:javac-plugin')

    testCompile gradleTestKit()
    testCompile localGroovy()
    testCompile project(':core:test-common').sourceSets.test.output
    testCompile project(path: ':core:test-common', configuration: 'testCompile')

    testRuntime files(createClasspathManifest)
}

jar {
    into('/')
    from {
        configurations.compile
                .filter { it.name.contains('traute') }
                .collect { it.isDirectory() ? it : zipTree(it) }
    }
}