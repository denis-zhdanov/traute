buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0"
    }
}

apply plugin: 'io.codearte.nexus-staging'

allprojects {
    group 'tech.harmonysoft'
    version = '1.1.9'

    ext {
        junitJupiterVersion = '5.0.1'
        junitPlatformVersion = '1.0.1'

        setupBintray = {
            bintray {
                user = project.hasProperty('bintrayUser') ? bintrayUser : ''
                key = project.hasProperty('bintrayApiKey') ? bintrayApiKey : ''
                publications = ['MyPublication']

                pkg {

                    repo = 'harmonysoft.tech'
                    name = archivesBaseName
                    licenses = ['MIT']
                    vcsUrl = 'https://github.com/denis-zhdanov/traute.git'

                    version {
                        name = version
                        released  = new Date()
                    }
                }
            }
        }
    }

    apply plugin: 'java'
    apply plugin: 'org.junit.platform.gradle.plugin'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'

    def shouldSign = !System.getenv('CI_ENV') && project.hasProperty('signing.keyId')
    if (shouldSign) {
        apply plugin: 'signing'
    }

    sourceCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()

        // For android annotations
        maven {
            url "https://maven.google.com"
        }
    }

    dependencies {
        compile 'org.jetbrains:annotations:15.0'

        testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"

        testCompile "org.junit.platform:junit-platform-runner:$junitPlatformVersion"
        testCompile "org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion"

        testCompileOnly 'org.apiguardian:apiguardian-api:1.0.0'
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    if (shouldSign) {
        signing {
            sign configurations.archives
        }
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                if (!System.getenv('CI_ENV')) {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: project.hasProperty('ossrhUsername') ? ossrhUsername : '',
                                   password: project.hasProperty('ossrhPassword') ? ossrhPassword : '')
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: project.hasProperty('ossrhUsername') ? ossrhUsername : '',
                                   password: project.hasProperty('ossrhPassword') ? ossrhPassword : '')
                }

                pom.project {
                    packaging 'jar'

                    scm {
                        connection 'scm:git:git://github.com/denis-zhdanov/traute.git'
                        developerConnection 'scm:git:git://github.com/denis-zhdanov/traute.git'
                        url 'https://github.com/denis-zhdanov/traute'
                    }

                    licenses {
                        license {
                            name 'The MIT License (MIT)'
                            url 'http://opensource.org/licenses/MIT'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'denis'
                            name 'Denis Zhdanov'
                            email 'denzhdanov@gmail.com'
                        }
                    }
                }
            }
        }
    }

    publishing {
        publications {
            MyPublication(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar
                groupId 'tech.harmonysoft'
                artifactId archivesBaseName
                version version
            }
        }
    }
}